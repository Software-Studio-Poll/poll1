<style>

div.a {
  margin-left: 20px;
}

.rem_choice{
  background-color: #ffcccb;
  margin-top: 10px;
  margin-bottom: 10px; 
  border-radius: 10px;
}

.add_choice{
  background-color: #96ea96;
  margin-top: 10px;
  border-radius: 10px;
}

.rem_question{ 
  color: #ffffff;
  background-color: #ff0000;
  padding: 10px;
  margin-top: 10px;
  border-radius: 10px;
  
}

button.add_question{
  color: #ffffff;
  background-color: #0abf0a;
  padding: 10px;
  margin-top: 10px;
  margin-left: 10px;
  border-radius: 10px;
}

div.actions {
  margin-left: 10px;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 2px solid rgba(0, 0, 0, 0.1);
}


</style>


<%= form_with(model: poll, local: true) do |form| %>
  <% if poll.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(poll.errors.count, "error") %> prohibited this poll from being saved:</h2>

      <ul>
        <% poll.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :Poll_Title, "Poll Title" %>
    <%= form.text_field :title, class: 'form-control', required: true %>
  </div>

  <div class="field">
    <%= form.label :id, "User ID" %>
    <%= form.number_field :user_id, class: 'form-control', required: true %>
  </div>
  
  <br>
  <hr></hr>
  <br>
  
  <div id="questions">
    <%= form.fields_for :questions do |questions_form| %>
      <div class="q" id="q0">
        <%= questions_form.label :Question %>
        <%= questions_form.text_field :text, class: 'form-control', required: true %>
        <%= questions_form.fields_for :answerchoices do |answerchoices_form| %>
          <div1 class="a" id="q0a0", margin = 10px>
            <%= answerchoices_form.label :Answer_Choice %>
            <%= answerchoices_form.text_field :content, class: 'form-control', required: true %>
            <%= answerchoices_form.hidden_field :_destroy, :value => '0' %>
            <button class="rem_choice" type="button">Remove Choice</button>
          </div1>
        <% end %>
        <button class="add_choice" type="button">Add New Choice</button>
        <button class="rem_question" type="button">Remove Question</button>
      </div>
    <% end %>
    <button class="add_question" type="button">Add New Question</button>
  </div>
  <div class="actions">
    <%= form.submit class: 'btn btn-primary', value: 'Create Poll' %>
  </div>
<% end %>

<script>
  function RemoveHiddenRequired() {
    console.log($("#questions").find("[required]:hidden"));
    console.log($("[required]:hidden"));
    $("#questions").find("[required]:hidden").remove();
  }

  $( document ).ready(function() {
    console.log( "ready!" );
    hide = $(".q").first().clone()
    hide[0].setAttribute("hidden", "");
    $(document.body).prepend(hide);
  });
  
  function fixatts(elem, cntr) {
    let regexp = /([0-9](?=_content|]\[c))|([0-9]+$)/g;
    $(elem).find("[id]").add(elem).each(function() {
        //console.log(this.id);
        this.id = this.id.replace(regexp, cntr);
        //console.log(this.id);
    })
    $(elem).find("[name]").add(elem).each(function() {
      if ($(this)[0].hasAttribute("name")) {
        $(this).attr("name");
        var name = $(this).attr("name");
        name = name.replace(regexp, cntr);
        $(this).attr("name", name);
      }
    })
    $(elem).find("[for]").add(elem).each(function() {
      var attr = "for"
      if ($(this)[0].hasAttribute(attr)) {
        $(this).attr(attr);
        var name = $(this).attr(attr);
        name = name.replace(regexp, cntr);
        $(this).attr(attr, name);
      }
    })
  }
  
  function qfixatts(elem, cntr) {
    let regexp = /[0-9]+/;
    $(elem).find("[id]").add(elem).each(function() {
        this.id = this.id.replace(regexp, cntr);
    })
    $(elem).find("[name]").add(elem).each(function() {
      if ($(this)[0].hasAttribute("name")) {
        $(this).attr("name");
        var name = $(this).attr("name");
        name = name.replace(regexp, cntr);
        $(this).attr("name", name);
      }
    })
    $(elem).find("[for]").add(elem).each(function() {
      var attr = "for"
      if ($(this)[0].hasAttribute(attr)) {
        $(this).attr(attr);
        var name = $(this).attr(attr);
        name = name.replace(regexp, cntr);
        $(this).attr(attr, name);
      }
    })
  }

  $(document).on("click", ".add_choice", function(){
    console.log("adding choice");
    //getting the div that contains the correct last choice of the appropriate question
    div = $(this).siblings(".a:visible").last();
    //finding the id that the new choice should be
    let count = parseInt(div.attr("id").substring(3, div.attr("id").length)) + 1;
    //cloning the selected choice
    c = div.clone();
    //changing the id of the clone to the correct id of the new choice
    fixatts(c, count);
    //emptying the value of the new choice
    c.children("input").val("");
    //append the new choice to the question_div
    $(this).parent().append(c);
    //move the add_choice button to the bottom of the div
    $(this).parent().append($(this));
    //move the remove_question button below the add_choice button
    $(this).parent().append($(this).siblings(".rem_question"));
  });
  
  $(".add_question").click(function(){
    console.log("adding question")
    //prevq is div containing previous question
    prevq = $(".q:visible").last();
    //count is id of new question to make
    let count = parseInt(prevq.attr("id").substring(1, prevq.attr("id").length)) + 1;
    //c is set to a clone of the hidden question at the top
    c = $(".q").first().clone();
    console.log(c);
    //remove hidden attribute from the clone
    c[0].removeAttribute("hidden");
    //set the id values of the clone correctly
    qfixatts(c, count);
    //append the corrected clone to the list of questions
    $("#questions").append(c);
    //move the add_questions button to the bottom
    $("#questions").append($(this));
  });
  
  $(document).on("click", ".rem_choice", function(){
    div = $(this).parent();
    if ($(this).parent().siblings(".a:visible").length == 0) {
      alert("You can't remove only choice!");
    }
    else {
      div.children("input:hidden").attr("value", "1");
      //div.attr("hidden","");
      div.remove();
    }
    
    //RemoveHiddenRequired();
    
  });
  
  $(document).on("click", ".rem_question", function(){
    div = $(this).parent();
    console.log($(this));
    console.log(div);
    if ($(this).parent().siblings(".q:visible").length == 0) {
      alert("You can't remove only question!");
    }
    else {
      div.remove();
    }
    
    //RemoveHiddenRequired();
    
  });
  
</script>